@page "/fertilizers/create"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService

<h3>Nuevo Fertilizante</h3>

<FertilizerForm @ref="fertilizerForm" Fertilizer="fertilizer" OnValidSubmit="CreateAsync" ReturnAction="Return" />

@code {
    private Fertilizer fertilizer = new();
    private FertilizerForm? fertilizerForm;

    private async Task CreateAsync()
    {
        var response = await repository.PostAsync("/api/fertilizers", fertilizer);
        if (response.Error)
        {
            var message = await response.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        Return();
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito.");
    }

    private void Return()
    {
        fertilizerForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/fertilizers");
    }
}
